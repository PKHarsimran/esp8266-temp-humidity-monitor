
# MQTT Consumer Plugin: Numeric sensors from ESPHome
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "pi4plantmonitor/sensor/livingroom_temperature/state",
    "pi4plantmonitor/sensor/livingroom_humidity/state",
    "pi4plantmonitor/sensor/pi4plantmonitor_uptime/state",
    "pi4plantmonitor/sensor/pi4plantmonitor_free_heap/state",
    "pi4plantmonitor/sensor/livingroom_co_level/state",
    "pi4plantmonitor/sensor/pi4plantmonitor_wifi_signal/state",
    "pi4plantmonitor/sensor/pi4plantmonitor_cpu_frequency/state",
    "pi4plantmonitor/sensor/pi4plantmonitor_chip_id/state"
  ]
  qos = 0
  connection_timeout = "30s"
  persistent_session = false
  client_id = "telegraf-mqtt"
  data_format = "value"
  data_type = "float"
  name_override = "esphome_sensor"
  topic_tag = "topic"

# MQTT Consumer Plugin: Text sensors from ESPHome
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "pi4plantmonitor/sensor/pi4plantmonitor_mac/state",
    "pi4plantmonitor/sensor/pi4plantmonitor_ip/state",
    "pi4plantmonitor/sensor/pi4plantmonitor_ssid/state",
    "pi4plantmonitor/status"
  ]
  qos = 0
  connection_timeout = "30s"
  persistent_session = false
  client_id = "telegraf-mqtt-strings"
  data_format = "value"
  data_type = "string"
  name_override = "esphome_text"
  topic_tag = "topic"

# InfluxDB Output Plugin: Write to InfluxDB v2.x
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"
  organization = "your_org"
  bucket = "esphome_db"
